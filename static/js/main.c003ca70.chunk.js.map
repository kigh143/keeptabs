{"version":3,"sources":["screens/Lock.tsx","redux/hook.ts","redux/ProjectSlice.ts","redux/TaskSlice.ts","Components/Project.tsx","Components/Sidebar.tsx","screens/Main.tsx","screens/Notfound.tsx","Components/Task.tsx","screens/Project.tsx","Navigation.tsx","redux/Store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Lock","className","src","alt","href","useAppDispatch","useDispatch","useAppSelector","useSelector","ProjectSlice","createSlice","name","initialState","projects","selectedProject","reducers","addProject","state","actions","unshift","payload","setAsSelectedProject","editProject","map","project","id","deletedProject","filter","TaskSlice","tasks","selectedTask","addTask","push","setAsSelectedTask","editTask","Task","markAsComplete","completed","end_date","moment","format","startTask","task","started_date","deletedTask","deletedProjectTasks","project_id","Project","handleDelete","select","style","backgroundColor","color","created_at","fromNow","description","onClick","e","preventDefault","aria-hidden","Sidebar","Main","persistedReducer","dispatch","history","useHistory","useState","greeting","setGreeting","setName","setDescription","goals","setGoals","setColor","showModal","setShowModal","useRef","window","confirm","reset","closeModal","useEffect","currentHour","parseFloat","Date","getGreetingTime","textTransform","index","htmlFor","type","onChange","target","value","fontWeight","cols","rows","newProject","uuidv4","add","Notfound","textDecoration","undefined","title","checked","setTitle","level_of_difficulty","setLevel_of_difficulty","expected_duration","setExpected_duration","totalTasks","totalDays","totals","setTotals","project_tasks","tsk","reduce","number","sum","length","toFixed","newTask","parseInt","createNewTask","Navigation","exact","path","component","rootReducer","combineReducers","persistConfig","key","version","storage","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","persistor","persistStore","App","loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c003ca70.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Lock: React.FC = () => {\n  return (\n    <main>\n      <section className=\"glass\">\n        <div className=\"closed\">\n          <div className=\"open\">\n            <div className=\"locked\">\n              <img src=\"./logo192.png\" alt=\"\" />\n              <small>locked</small>\n              <h2>keepTabs</h2>\n              <p>A place to be more productive and accountable</p>\n              <a href=\"/keeptabs/home\"> Get Back In</a>\n            </div>\n          </div>\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default Lock;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { RootState, AppDispatch } from \"./Store\";\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface ProjectState {\n  projects: Project[];\n  selectedProject: any;\n}\n\nconst initialState: ProjectState = {\n  projects: [],\n  selectedProject: {},\n};\n\nconst ProjectSlice = createSlice({\n  name: \"project\",\n  initialState,\n  reducers: {\n    addProject(state, actions: PayloadAction<Project>) {\n      state.projects.unshift(actions.payload);\n    },\n    setAsSelectedProject(state, actions: PayloadAction<Project>) {\n      state.selectedProject = actions.payload;\n    },\n    editProject(state, actions) {\n      state.projects = state.projects.map((project: Project) => {\n        if (project.id === actions.payload.id) {\n          return { ...project, ...actions.payload };\n        }\n        return project;\n      });\n    },\n    deletedProject(state, actions) {\n      state.projects = state.projects.filter((project: Project) => {\n        if (project.id !== actions.payload.id) {\n          return project;\n        }\n      });\n    },\n  },\n});\n\nexport const { addProject, setAsSelectedProject, editProject, deletedProject } =\n  ProjectSlice.actions;\nexport default ProjectSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport moment from \"moment\";\n\ninterface TaskState {\n  tasks: Task[];\n  selectedTask: any;\n}\n\nconst initialState: TaskState = {\n  tasks: [],\n  selectedTask: {},\n};\n\nconst TaskSlice = createSlice({\n  name: \"Task\",\n  initialState,\n  reducers: {\n    addTask(state, actions: PayloadAction<Task>) {\n      state.tasks.push(actions.payload);\n    },\n    setAsSelectedTask(state, actions: PayloadAction<Task>) {\n      state.selectedTask = actions.payload;\n    },\n    editTask(state, actions) {\n      state.tasks = state.tasks.map((Task: Task) => {\n        if (Task.id === actions.payload.id) {\n          return { ...Task, ...actions.payload };\n        }\n        return Task;\n      });\n    },\n    markAsComplete(state, actions) {\n      state.tasks = state.tasks.map((Task: Task) => {\n        if (Task.id === actions.payload.id) {\n          return { ...Task, completed: true, end_date: moment().format() };\n        }\n        return Task;\n      });\n    },\n    startTask(state, actions) {\n      state.tasks = state.tasks.map((task: Task) => {\n        if (task.id === actions.payload.id) {\n          return { ...task, started_date: moment().format() };\n        }\n        return task;\n      });\n    },\n    deletedTask(state, actions) {\n      state.tasks = state.tasks.filter((Task: Task) => {\n        if (Task.id !== actions.payload.id) {\n          return { ...Task, ...actions.payload };\n        }\n      });\n    },\n\n    deletedProjectTasks(state, actions) {\n      state.tasks = state.tasks.filter((Task: Task) => {\n        if (Task.project_id !== actions.payload.id) {\n          return { ...Task, ...actions.payload };\n        }\n      });\n    },\n  },\n});\n\nexport const {\n  addTask,\n  setAsSelectedTask,\n  editTask,\n  deletedTask,\n  markAsComplete,\n  startTask,\n  deletedProjectTasks,\n} = TaskSlice.actions;\nexport default TaskSlice.reducer;\n","import React from \"react\";\nimport moment from \"moment\";\n\ninterface Props {\n  project: Project;\n  handleDelete: any;\n  select: any;\n}\n\nconst Project: React.FC<Props> = ({ project, handleDelete, select }) => {\n  return (\n    <>\n      <div className=\"project__card shadow-md\">\n        <div\n          className=\"project__header\"\n          style={{ backgroundColor: project.color }}\n        >\n          <h2>{project.name}</h2>\n          <p>{moment(project.created_at, \"YYYYMMDD\").fromNow()}</p>\n        </div>\n        <div className=\"project__details\">\n          <p>{project.description}</p>\n        </div>\n        <div className=\"project__action\">\n          <div>\n            <a\n              onClick={(e) => {\n                e.preventDefault();\n                select(project);\n              }}\n            >\n              <i className=\"fa fa-eye\" aria-hidden=\"true\"></i> view project\n            </a>\n          </div>\n          <div>\n            <a href=\"#\">\n              <i className=\"fa fa-check-square-o\" aria-hidden=\"true\"></i>\n              Mark as complete\n            </a>\n          </div>\n          <div>\n            <a\n              onClick={(e) => {\n                e.preventDefault();\n                handleDelete(project.id);\n              }}\n            >\n              <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete Project\n            </a>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\n\ninterface Props {\n  color: string;\n}\n\nconst Sidebar: React.FC<Props> = ({ color }) => {\n  return (\n    <div className=\"menu\">\n      <div className=\"companyLogo shadow-sm\">\n        <img src=\"./logo192.png\" alt=\"\" />\n        <h2>KeepTaps</h2>\n      </div>\n      <div className=\"links\">\n        <p>\n          <a href=\"/keeptabs/home\">\n            <i className=\"fa fa-square\" aria-hidden=\"true\"></i>Projects\n          </a>\n        </p>\n        <p>\n          <a href=\"/keeptabs/stats\">\n            <i className=\"fa fa-pie-chart\" aria-hidden=\"true\"></i>Stats\n          </a>\n        </p>\n        <p>\n          <a href=\"/keeptabs/settings\">\n            <i className=\"fa fa-cogs\" aria-hidden=\"true\"></i>Settings\n          </a>\n        </p>\n        <p>\n          <a href=\"/keeptabs\">\n            <i className=\"fa fa-lock\" aria-hidden=\"true\"></i>Lock App\n          </a>\n        </p>\n\n        {/* <div className=\"selectedProjectMenu\">\n          <p>Select project name</p>\n          <ul>\n            <li className=\"completed\">\n              <a href=\"\"> Completed</a>\n            </li>\n            <li className=\"running\">\n              <a href=\"\"> Running</a>\n            </li>\n            <li className=\"pending\">\n              <a href=\"\"> Pending</a>\n            </li>\n          </ul>\n        </div> */}\n      </div>\n      <div className=\"version\">\n        <small>KeepTabs V 1.0.0</small>\n        <a href=\"#\">maintained by ghkatende</a>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport moment from \"moment\";\nimport { useAppDispatch, useAppSelector } from \"../redux/hook\";\nimport {\n  addProject,\n  deletedProject,\n  setAsSelectedProject,\n} from \"../redux/ProjectSlice\";\nimport { deletedProjectTasks } from \"../redux/TaskSlice\";\nimport { useHistory } from \"react-router-dom\";\nimport Project from \"../Components/Project\";\nimport Sidebar from \"../Components/Sidebar\";\n\nconst Main: React.FC = () => {\n  const {\n    project: { projects },\n  } = useAppSelector((state) => state.persistedReducer);\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const [greeting, setGreeting] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [goals, setGoals] = useState(\"\");\n  const [color, setColor] = useState(\"#eee\");\n  const [showModal, setShowModal] = useState(false);\n  const formRef = useRef(null);\n\n  const add = (e: any) => {\n    e.preventDefault();\n    const newProject = {\n      name,\n      goals,\n      description,\n      created_at: moment().format(),\n      id: uuidv4(),\n      color,\n    };\n    dispatch(addProject(newProject));\n    closeModal();\n    reset();\n  };\n\n  const handleDelete = (id: string) => {\n    let result = window.confirm(\n      \"Are you sure you want to delete this project?\"\n    );\n    if (result) {\n      dispatch(deletedProject({ id }));\n      dispatch(deletedProjectTasks({ id }));\n    }\n  };\n\n  const reset = () => {\n    setDescription(\"\");\n    setName(\"\");\n    setColor(\"\");\n    setGoals(\"\");\n    setName(\"\");\n  };\n\n  const select = (project: Project) => {\n    dispatch(setAsSelectedProject(project));\n    history.push(\"/keeptabs/project\");\n  };\n\n  const closeModal = () => setShowModal(false);\n  const openModal = () => setShowModal(true);\n\n  const getGreetingTime = () => {\n    var split_afternoon = 12;\n    var split_evening = 17;\n    var currentHour = parseFloat(moment(new Date()).format(\"HH\"));\n    if (currentHour >= split_afternoon && currentHour <= split_evening) {\n      setGreeting(\"afternoon\");\n    } else if (currentHour >= split_evening) {\n      setGreeting(\"evening\");\n    } else {\n      setGreeting(\"morning\");\n    }\n  };\n\n  useEffect(() => {\n    getGreetingTime();\n  }, []);\n\n  return (\n    <main>\n      <section className=\"glass\">\n        <div className=\"open\">\n          <Sidebar color=\"\" />\n          <div className=\"content\">\n            <div className=\"projects\">\n              <div className=\"greetings shadow-lg\">\n                <div>\n                  <p style={{ textTransform: \"uppercase\" }}>\n                    <small>\n                      <b>{moment().format(\"h:mm a | dddd MMM D YYYY\")}</b>\n                    </small>\n                  </p>\n                  <br />\n                  <h2 className=\"text-gray-600\">\n                    <b>Good {greeting} katende</b>\n                  </h2>\n                  <p>motivational quote Lorem ipsum dolor sit amet.</p>\n                </div>\n                <a\n                  className=\"topBarBtn\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    openModal();\n                  }}\n                >\n                  Create Project\n                </a>\n              </div>\n\n              <div className=\"list\">\n                <h4 className=\"list-title\">Projects list</h4>\n\n                <div className=\"projectRow\">\n                  {projects.map((project, index) => (\n                    <Project\n                      project={project}\n                      handleDelete={handleDelete}\n                      select={select}\n                      key={index}\n                    />\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <div className=\"circle1\"></div>\n      <div className=\"circle2\"></div>\n      {showModal && (\n        <div className=\"projectForm\">\n          <form className=\"form shadow-lg\">\n            <div className=\"flex justify-between bg-gray-100 p-4 text-center br-5\">\n              <h3>Create Project</h3>\n              <a\n                onClick={(e) => {\n                  e.preventDefault();\n                  closeModal();\n                }}\n              >\n                Close\n              </a>\n            </div>\n\n            <div className=\"field\">\n              <label htmlFor=\"\">Project Name</label>\n              <input type=\"text\" onChange={(e) => setName(e.target.value)} />\n            </div>\n\n            <div className=\"field\">\n              <label htmlFor=\"\">Project theme Color</label>\n              <div className=\"colorBox\">\n                <input\n                  type=\"color\"\n                  onChange={(e) => setColor(e.target.value)}\n                  className=\"colorPIcker\"\n                  value={color}\n                />\n                <div\n                  style={{\n                    color: \"#fff\",\n                    backgroundColor: color,\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {name}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"field\">\n              <label htmlFor=\"\">Project Description</label>\n              <textarea\n                cols={3}\n                rows={3}\n                onChange={(e) => setDescription(e.target.value)}\n              ></textarea>\n            </div>\n\n            <div className=\"field\">\n              <label htmlFor=\"\">Project Goals</label>\n              <textarea\n                cols={3}\n                rows={3}\n                onChange={(e) => setGoals(e.target.value)}\n              ></textarea>\n            </div>\n\n            <button className=\"form-btn mt-8\" onClick={(e) => add(e)}>\n              Create Project\n            </button>\n          </form>\n        </div>\n      )}\n    </main>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nconst Notfound: React.FC = () => {\n  return (\n    <main>\n      <section className=\"glass\">\n        <div className=\"closed\">\n          <div className=\"open\">\n            <div className=\"locked\">\n              <img src=\"./logo192.png\" alt=\"\" />\n              <h2>Not Found</h2>\n              <p>A place to be more productive and accountable</p>\n              <a href=\"/keeptabs/home\"> Get Back In</a>\n            </div>\n          </div>\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default Notfound;\n","import React from \"react\";\nimport { startTask, markAsComplete } from \"../redux/TaskSlice\";\nimport { useAppDispatch } from \"../redux/hook\";\n\ninterface Props {\n  task: Task;\n}\n\nconst Task: React.FC<Props> = ({ task }) => {\n  const dispatch = useAppDispatch();\n  return (\n    <>\n      <div\n        className=\"project__task shadow-md\"\n        style={{\n          textDecoration: task.completed ? \"line-through\" : undefined,\n          backgroundColor: task.completed ? \"#f3f3f3\" : \"#fff\",\n        }}\n      >\n        <div className=\"project__taskInfo\">\n          <p className=\"font-semibold\">{task.title}</p>\n          <small>{task.description}</small>\n        </div>\n        <div className=\"project__taskActions\">\n          {task.started_date === \"\" ? (\n            <button onClick={() => dispatch(startTask({ id: task.id }))}>\n              Start\n            </button>\n          ) : (\n            <input\n              type=\"checkbox\"\n              checked={task.completed}\n              onClick={() => dispatch(markAsComplete({ id: task.id }))}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Task;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../redux/hook\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { addTask } from \"../redux/TaskSlice\";\nimport { gsap, Power3 } from \"gsap\";\nimport Header from \"../Components/Header\";\nimport Sidebar from \"../Components/Sidebar\";\nimport Task from \"../Components/Task\";\n\nconst Project: React.FC = () => {\n  const {\n    project: { selectedProject },\n    task: { tasks },\n  } = useAppSelector((state) => state.persistedReducer);\n  const dispatch = useAppDispatch();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [level_of_difficulty, setLevel_of_difficulty] = useState(\"\");\n  const [expected_duration, setExpected_duration] = useState(\"\");\n  const formRef = useRef(null);\n  const [totals, setTotals] = useState({ totalTasks: 1, totalDays: 1 });\n  const project_tasks = tasks.filter(\n    (tsk) => tsk.project_id === selectedProject.id\n  );\n\n  const createNewTask = (e: any) => {\n    e.preventDefault();\n    let newTask = {\n      id: uuidv4(),\n      project_id: selectedProject.id,\n      title,\n      level_of_difficulty: parseInt(level_of_difficulty, 10),\n      expected_duration: parseInt(expected_duration, 10),\n      description,\n      started_date: \"\",\n      end_date: \"\",\n      completed: false,\n    };\n    dispatch(addTask(newTask));\n    reset();\n  };\n\n  const reset = () => {\n    setDescription(\"\");\n    setDescription(\"\");\n    setExpected_duration(\"\");\n    setTitle(\"\");\n    setLevel_of_difficulty(\"\");\n  };\n\n  useEffect(() => {\n    const totalDays = project_tasks\n      .map((tsk) => tsk.expected_duration)\n      .reduce((number, sum) => sum + number, 0);\n    setTotals({ totalTasks: project_tasks.length, totalDays });\n  }, [tasks]);\n\n  return (\n    <main>\n      <section className=\"glass\">\n        <div className=\"open\">\n          <Sidebar color=\"\" />\n          <div className=\"content\">\n            <div className=\"project\">\n              <div\n                className=\"project__detailsHeader shadow-lg\"\n                style={{\n                  backgroundColor: selectedProject.color,\n                  color: \"#fff\",\n                }}\n              >\n                <div className=\"project__detail\">\n                  <h1>{selectedProject.name}</h1>\n                  <p>{selectedProject.description}</p>\n                </div>\n                <div className=\"project__stats\">\n                  <div className=\"project_statBox\">\n                    <div className=\"project_stat\">\n                      <small>\n                        <b>Tasks</b>\n                      </small>\n                      <p>{totals.totalTasks}</p>\n                    </div>\n                    <div className=\"project_stat\">\n                      <small>\n                        <b>Expected Speed</b>\n                      </small>\n                      <p>\n                        {(totals.totalTasks / totals.totalDays).toFixed(2)}{\" \"}\n                        <span>t/d</span>\n                      </p>\n                    </div>\n                    <div className=\"project_stat\">\n                      <small>\n                        <b>Your Speed</b>\n                      </small>\n                      <p>\n                        {(totals.totalTasks / totals.totalDays).toFixed(2)}{\" \"}\n                        <span>t/d</span>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"project__taskList\">\n                <div className=\"tasks\">\n                  <h4>Project tasks</h4>\n                  {project_tasks.map((task, index) => (\n                    <Task key={index} task={task} />\n                  ))}\n                </div>\n\n                <div className=\"task_form\">\n                  <h4>Add New Tasks</h4>\n\n                  <form className=\"form shadow-lg\">\n                    <div className=\"field\">\n                      <label htmlFor=\"\">Task</label>\n                      <input\n                        type=\"text\"\n                        onChange={(e) => setTitle(e.target.value)}\n                        value={title}\n                      />\n                    </div>\n\n                    <div className=\"field\">\n                      <label htmlFor=\"\">Level of difficulty</label>\n                      <select\n                        onChange={(e) => setLevel_of_difficulty(e.target.value)}\n                      >\n                        <option></option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                      </select>\n                    </div>\n\n                    <div className=\"field\">\n                      <label htmlFor=\"\">Estimated duration (in days)</label>\n                      <input\n                        type=\"number\"\n                        onChange={(e) => setExpected_duration(e.target.value)}\n                        value={expected_duration}\n                      />\n                    </div>\n\n                    <div className=\"field\">\n                      <label htmlFor=\"\">Task description</label>\n                      <textarea\n                        cols={3}\n                        rows={3}\n                        onChange={(e) => setDescription(e.target.value)}\n                        value={description}\n                      ></textarea>\n                      <small className=\"exp\">project name </small>\n                    </div>\n\n                    <button\n                      className=\"form-btn\"\n                      onClick={(e) => createNewTask(e)}\n                    >\n                      Add Task\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"closed\">\n          <div className=\"locked\">\n            <img src=\"./logo.png\" alt=\"\" />\n            <small>locked</small>\n            <h2>keepTabs</h2>\n            <p>A place to be more productive and accountable</p>\n            <a href=\"#\"> Get Back In</a>\n          </div>\n        </div>\n      </section>\n      <div className=\"circle1\"></div>\n      <div className=\"circle2\"></div>\n    </main>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Lock from \"./screens/Lock\";\nimport Main from \"./screens/Main\";\nimport Notfound from \"./screens/Notfound\";\nimport Project from \"./screens/Project\";\n\nconst Navigation: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/keeptabs/home\" component={Main} />\n        <Route exact path=\"/keeptabs/project\" component={Project} />\n        <Route exact path=\"/keeptabs\" component={Lock} />\n        <Route component={Notfound} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Navigation;\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from \"@reduxjs/toolkit\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nimport TaskSlice from \"./TaskSlice\";\nimport ProjectSlice from \"./ProjectSlice\";\n\nconst rootReducer = combineReducers({\n  task: TaskSlice,\n  project: ProjectSlice,\n});\n\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: {\n    persistedReducer,\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  devTools: true,\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport Navigation from \"./Navigation\";\nimport { store, persistor } from \"./redux/Store\";\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Navigation />\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}